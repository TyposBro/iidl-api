# {PATH_TO_THE_PROJECT}/docker-compose.yml

services:
  # --- Backend API Service ---
  api:
    build:
      context: ./api # Path to the directory containing the API's Dockerfile
      # dockerfile: Dockerfile # Optional: if your Dockerfile has a non-standard name
    container_name: iidl_api_dev # Optional: specific container name
    ports:
      - "${API_MAPPED_PORT:-8080}:${API_PORT:-8000}"
    environment:
      MONGODB_URI: ${MONGODB_URI}
      PORT: ${API_PORT:-8000}
      NODE_ENV: ${NODE_ENV:-development} # Ensure this is 'development' for nodemon
      ADMIN_USERNAME: ${ADMIN_USERNAME}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}
      SUPABASE_SERVICE_KEY: ${SUPABASE_SERVICE_KEY}
      SUPABASE_BUCKET_NAME: ${SUPABASE_BUCKET_NAME}
      CHOKIDAR_USEPOLLING: "true" # Helps with file watching in Docker volumes
    networks:
      - iidl-network
    volumes:
      # Mount local API code into the container for live updates
      - ./api:/usr/src/app
      # Use a Docker volume for node_modules inside the container.
      # This uses the node_modules installed during the image build step
      # and prevents host node_modules (if any) from overwriting.
      - /usr/src/app/node_modules
    # Command to start the API with nodemon for hot-reloading.
    # Assumes you have a "dev" script in your api/package.json like "nodemon your-main-app-file.js"
    # The `sh -c "npm install && ..."` part is if you want to ensure deps are installed on every start,
    # but generally, dependencies are handled in the Dockerfile build.
    # If nodemon is installed and your Dockerfile handles `npm install`, this is simpler:
    command: npm run dev
    # If you absolutely need to run npm install here (less ideal, slows startup):
    # command: sh -c "npm install --legacy-peer-deps && npm run dev"

  # --- Frontend React Service (Development Mode) ---
  frontend:
    image: node:20-alpine
    container_name: iidl_frontend_dev
    working_dir: /app
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      VITE_API_URL: http://localhost:${API_MAPPED_PORT:-8080}/api
      NODE_ENV: development
      CHOKIDAR_USEPOLLING: "true"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: sh -c "npm install --legacy-peer-deps && npm start"
    depends_on:
      - api
    networks:
      - iidl-network

networks:
  iidl-network:
    driver: bridge
